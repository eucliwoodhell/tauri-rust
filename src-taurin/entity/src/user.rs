//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub username: String,
    pub name: String,
    pub bio: Option<String>,
    pub image: Option<String>,
    pub path: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::thread::Entity")]
    Thread,
}

impl Related<super::thread::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Thread.def()
    }
}

impl Related<super::community::Entity> for Entity {
    fn to() -> RelationDef {
        super::user_community::Relation::Community.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::user_community::Relation::User.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
